apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sftd.fullname" . }}
  labels:
    {{- include "sftd.labels" . | nindent 4 }}
spec:
  # TODO: Make configurable in follow-up PR
  # This is 1 on purpose as we need more machinery to make multiple SFTs work.
  # Work for that is tracked in: https://github.com/wireapp/wire-server-deploy/pull/383
  replicas: 1
  serviceName: {{ include "sftd.fullname" . }}
  selector:
    matchLabels:
      {{- include "sftd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "sftd.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      hostNetwork: true
      volumes:
        - name: external-ip
          emptyDir: {}
      initContainers:
        - name: external-ip
          image: alpine:3.12
          volumeMounts:
            - mountPath: /external-ip
              name: external-ip
          command:
            - /bin/sh
            - -c
            - |
                set -e
                # TODO: Re-add the get-external-ip logic? So this at least works on GKE
                # requires us to set up a service-account
                external_ip=$(ip route get 1 | awk '{print $7;exit}')
                echo $external_ip
                echo "export EXTERNAL_IP=$external_ip" >> /external-ip/env
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /external-ip
              name: external-ip
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          command:
            - /bin/sh
            - -c
            - |
              . /external-ip/env
              exec sftd  -I ${POD_IP} -M ${POD_IP} -A ${EXTERNAL_IP} -u "https://{{ required "must specify host" .Values.host }}"
          ports:
            - name: sft
              containerPort: 8585
              protocol: TCP
            - name: metrics
              containerPort: 49090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
          lifecycle:
            preStop:
              exec:
                # TODO: Workaround because sftd does not support graceful draining natively.
                # tracked in https://github.com/zinfra/backend-issues/issues/1451
                command:
                  - /bin/sleep
                  - "{{ .Values.terminationGracePeriodSeconds }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
