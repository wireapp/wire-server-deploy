on:
  push:
    branches: [master, develop]
    tags: [v*]
    paths-ignore:
      - "*.md"
      - "**/*.md"
  pull_request:
    branches: [master, develop]
    paths-ignore:
      - "*.md"
      - "**/*.md"

jobs:
  # Fast-track deployment job - runs in parallel with builds
  deploy:
    name: Build and Deploy default build
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on:
      group: wire-server-deploy
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: cachix/install-nix-action@v27
      - uses: cachix/cachix-action@v15
        with:
          name: wire-server
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"

      - name: Install nix environment
        run: nix-env -f default.nix -iA env

      - name: Get upload name
        id: upload_name
        run: echo "UPLOAD_NAME=$GITHUB_SHA" >> $GITHUB_OUTPUT

      # Only build default profile for deployment
      - name: Process default build for deployment
        run: ./offline/default-build/build.sh
        env:
          GPG_PRIVATE_KEY: "${{ secrets.GPG_PRIVATE_KEY }}"
          DOCKER_LOGIN: "${{ secrets.DOCKER_LOGIN }}"

      - name: Upload default build to S3
        run: |
          aws s3 cp offline/default-build/output/assets.tgz s3://public.wire.com/artifacts/wire-server-deploy-static-${{ steps.upload_name.outputs.UPLOAD_NAME }}.tgz
          echo "Uploaded to: https://s3-$AWS_REGION.amazonaws.com/public.wire.com/artifacts/wire-server-deploy-static-${{ steps.upload_name.outputs.UPLOAD_NAME }}.tgz"
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          AWS_REGION: "eu-west-1"

      - name: Install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "^1.3.7"
          terraform_wrapper: false

      - name: Deploy to Hetzner with fast S3 deployment
        run: ./offline/cd-with-retry.sh
        env:
          HCLOUD_TOKEN: "${{ secrets.HCLOUD_TOKEN }}"

  # Parallel builds for other profiles
  build-container:
    name: Build container
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on:
      group: wire-server-deploy
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: cachix/install-nix-action@v27
      - uses: cachix/cachix-action@v15
        with:
          name: wire-server
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"

      - name: Get upload name
        id: upload_name
        run: echo "UPLOAD_NAME=$GITHUB_SHA" >> $GITHUB_OUTPUT

      - name: Build and upload wire-server-deploy container
        run: |
          container_image=$(nix-build --no-out-link -A container)
          skopeo copy --retry-times 10 --dest-creds "$DOCKER_LOGIN" \
            docker-archive:"$container_image" \
            "docker://quay.io/wire/wire-server-deploy:${{ steps.upload_name.outputs.UPLOAD_NAME }}"
        env:
          DOCKER_LOGIN: "${{ secrets.DOCKER_LOGIN }}"

  build-demo:
    name: Build demo profile
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on:
      group: wire-server-deploy
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: cachix/install-nix-action@v27
      - uses: cachix/cachix-action@v15
        with:
          name: wire-server
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"

      - name: Install nix environment
        run: nix-env -f default.nix -iA env

      - name: Get upload name
        id: upload_name
        run: echo "UPLOAD_NAME=$GITHUB_SHA" >> $GITHUB_OUTPUT

      - name: Process demo profile build
        run: ./offline/demo-build/build.sh
        env:
          GPG_PRIVATE_KEY: "${{ secrets.GPG_PRIVATE_KEY }}"
          DOCKER_LOGIN: "${{ secrets.DOCKER_LOGIN }}"

      - name: Upload demo build to S3
        run: |
          aws s3 cp offline/demo-build/output/assets.tgz s3://public.wire.com/artifacts/wire-server-deploy-static-demo-${{ steps.upload_name.outputs.UPLOAD_NAME }}.tgz
          echo "Uploaded to: https://s3-$AWS_REGION.amazonaws.com/public.wire.com/artifacts/wire-server-deploy-static-demo-${{ steps.upload_name.outputs.UPLOAD_NAME }}.tgz"
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          AWS_REGION: "eu-west-1"

  build-min:
    name: Build min profile
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on:
      group: wire-server-deploy
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: cachix/install-nix-action@v27
      - uses: cachix/cachix-action@v15
        with:
          name: wire-server
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"

      - name: Install nix environment
        run: nix-env -f default.nix -iA env

      - name: Get upload name
        id: upload_name
        run: echo "UPLOAD_NAME=$GITHUB_SHA" >> $GITHUB_OUTPUT

      - name: Process min profile build
        run: ./offline/min-build/build.sh
        env:
          GPG_PRIVATE_KEY: "${{ secrets.GPG_PRIVATE_KEY }}"
          DOCKER_LOGIN: "${{ secrets.DOCKER_LOGIN }}"

      - name: Upload min build to S3
        run: |
          aws s3 cp offline/min-build/output/assets.tgz s3://public.wire.com/artifacts/wire-server-deploy-static-min-${{ steps.upload_name.outputs.UPLOAD_NAME }}.tgz
          echo "Uploaded to: https://s3-$AWS_REGION.amazonaws.com/public.wire.com/artifacts/wire-server-deploy-static-min-${{ steps.upload_name.outputs.UPLOAD_NAME }}.tgz"
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          AWS_REGION: "eu-west-1"
