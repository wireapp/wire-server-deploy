#!/usr/bin/env bash

USAGE="create certificate using self-signed CA. Usage: $0 <CN> where CN is 'mydomain.com'"
cn=${1:?$USAGE}


SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CERT_DIR="${SCRIPT_DIR}/certs"
mkdir -p "$CERT_DIR"


CA_cert=${2:?wire.com.crt}
CA_key=${2:?private.pem}

cd "$CERT_DIR" || exit

set -ex

echo $cn > dns_name

ALLDOMAINS=""
for ONEREGISTRYIN in quay.io k8s.gcr.io gcr.io docker.caching.proxy.internal registry-1.docker.io auth.docker.io ${REGISTRIES}; do
    ONEREGISTRY=$(echo ${ONEREGISTRYIN} | xargs) # Remove whitespace
    echo "Adding certificate for registry: $ONEREGISTRY"
    ALLDOMAINS="${ALLDOMAINS},DNS:${ONEREGISTRY}"
done
export ALLDOMAINS=${ALLDOMAINS:1} # remove the first comma and export

openssl genrsa -out client.key 2048

openssl req -new -sha256 -key client.key -subj "/CN=${cn}" \
    -reqexts SAN -config <(cat <(printf "[req]\ndistinguished_name = dn\n[dn]\n[SAN]\nsubjectAltName=${ALLDOMAINS}")) \
    -out client-csr.csr

openssl x509 -req -in client-csr.csr -CA "$CA_cert" -CAkey "$CA_key" -CAcreateserial -out client.crt \
    -days 500 -sha256 -extensions SAN \
    -extfile <(cat <(printf "[req]\ndistinguished_name = dn\n[dn]\n[SAN]\nsubjectAltName=${ALLDOMAINS}")) \

rm client-csr.csr

