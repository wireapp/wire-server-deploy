- name: Ensure NTP daemon is running
  service: name="{{ ntp_daemon }}" enabled=yes

- shell: ntpq -pn
  register: ntpq_output

- debug: var=ntpq_output.stdout_lines

# "     remote           refid      st t when poll reach   delay   offset  jitter",
# "==============================================================================",
# " 0.ubuntu.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000",
#
# ^-- This is an example of a "bad" output, where no NTP servers can actually be reached
#     The check is a bit fragile but may help catching things earlier on
- fail:
    msg: Check the output above and ensure that you are able to connect to the configured
         NTP servers! If you have no idea what this means, refer to
         https://detailed.wordpress.com/2017/10/22/understanding-ntpq-output
  when: ntpq_output.stdout_lines|length <= 3

# Get the current time in miliseconds from all hosts!
- shell: echo $(($(date +%s%N)/1000000))
  register: cur_time_ms_string

# This convoluted assertion does the following: uses the first item in the group as a reference and
# compares it against all others... the `run_once` is the magic bit here, as it reuses the same value
# of cur_time_ms_string across all hosts.
- assert:
    that: ((hostvars[item]['cur_time_ms_string'].stdout|int - cur_time_ms_string.stdout|int) | abs) < {{ allowed_time_diff_between_servers_in_ms }}
    msg: "Do not allow more than {{ allowed_time_diff_between_servers_in_ms }} ms diff between servers"
  with_items: "{{ play_hosts }}"
  run_once: true
