# experimental!
#
# sets up a private docker registry with fake certificates and scripts to mirror images
# then spoofs DNS on kubernetes nodes to pull images from that registry
#
# add this to your hosts.ini:
#
# [all]
# registry01 ansible_host=1.2.3.4
#
# [registry]
# registry01
#
# [all:vars]
# FIXME: do we need an interface binding? we're abusing apache, and localhost.
# registry_network_interface = eth0
# # the CA key on the registry host
# registry_ca_cert = /home/wire/docker-squid4/mk-ca-cert/certs/wire.com.crt
# registry_ca_key  = /home/wire/docker-squid4/mk-ca-cert/certs/private.pem
# create_ca_cert = false
# create_ca_domain = wire.com
# contenthome = /home/wire/docker-squid4/docker-squid/docker_registry
# registry_dns_name = proxybox.wire.com
#
# Be sure to run `docker login` from the registry node if you wish to mirror any private images.
#
#
# the first time, run with `-e restart=true`
# after mirroring, re-run with `-e dns_spoofing=true`
#
- hosts: localhost
  gather_facts: false
  tasks:
  - name: create_ca
    command: "files/registry/mk-certs"
    when: create_ca_cert

  - name: copy fake ca certificate
    copy:
      src: "files/registry/certs/{{ create_ca_domain }}.crt"
      dest: "/usr/local/share/ca-certificates/{{ create_ca_domain }}/{{ create_ca_domain }}.crt"
    when: create_ca_cert

- hosts: registry
  tasks:
    - name: create dir
      file:
        path: "{{ contenthome }}{{ item }}"
        state: directory
      with_items:
        - /opt/registry
        - /opt/registry/certs
        - /mnt/registry

    - name: copy bash scripts
      copy:
        src: files/registry/{{ item }}
        dest: {{ contenthome }}/opt/registry/{{ item }}
        mode: 0755
      with_items:
        - images.sh
        - upload_image.sh
        - registry-run.sh
        - list_of_docker_images.txt
        - mk-sub-certificate

    - name: copy fake ca certificate
      copy:
        src: "files/registry/certs/{{ create_ca_domain }}.crt"
        dest: "/usr/local/share/ca-certificates/{{ create_ca_domain }}/{{ create_ca_domain }}.crt"
      when: create_ca_cert

    - name: create sub certificate
      command: "{{ contenthome }}/opt/registry/mk-sub-certificate proxybox.org {{ registry_ca_cert }} {{ registry_ca_key }}"
      args:
        chdir: "{{ contenthome }}/opt/registry"

- hosts: k8s-cluster
  tags: trust
  vars:
  tasks:
    - debug: var=registry_dns_name

    - name: Add IP/dns of registry and of upstream docker registries to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '.* {{ item }}$'
        line: "{{ hostvars[groups['registry'][0]]['ansible_' + registry_network_interface]['ipv4']['address'] }} {{ item }}"
        state: present
      with_items:
        - "{{ registry_dns_name }}"
        - quay.io
        - k8s.gcr.io
        - gcr.io
        - docker.caching.proxy.internal
        - registry-1.docker.io
        - auth.docker.io
      tags:
        - hostname
      when: dns_spoofing is defined

- hosts: k8s-cluster
  serial: 1
  tags: restart
  tasks:
    - name: restart docker to update trust store
      shell: systemctl restart docker
      when: restart is defined
    - pause:
        seconds: 30
      when: restart is defined
