- hosts: localhost
  gather_facts: false
  tasks:
    - name: check CA certificate existance (run files/registry/mk-cert if this fails)
      shell: ls files/registry/certs/wire.com.crt

    - name: check client certificate existance (run files/registry/mk-sub-cert if this fails)
      shell: ls files/registry/certs/client.crt

- hosts: registry
  tasks:
    - name: create dir
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /opt/registry
        - /opt/registry/certs
        - /mnt/registry

    - name: copy cert files
      copy:
        src: "files/registry/certs/{{ item }}"
        dest: "/opt/registry/certs/{{ item }}"
      with_items:
        - client.crt
        - client.key

    - name: copy bash
      copy:
        src: files/registry/{{ item }}
        dest: /opt/registry/{{ item }}
        mode: 0755
      with_items:
        - images.sh
        - registry-run.sh
        - list_of_docker_images.txt

- hosts: k8s-cluster
  tags: trust
  vars:
    cert_local_dir: "files/registry/certs"
    cert_dir: "/usr/local/share/ca-certificates/wire.com"
    cert_name: "wire.com.crt"
  vars_prompt:
    - name: registry_dns_name
      prompt: dns name used for certificate generation as CN
      private: no

  tasks:
    - name: create man-in-the-middle certificate directory
      file:
        path: "{{ cert_dir }}"
        state: directory
        mode: 0755

    - name: copy certificate
      copy:
        src: "{{ cert_local_dir }}/{{ cert_name }}"
        dest: "{{ cert_dir }}/{{ cert_name }}"
        mode: 0644

    - name: update ca certificates
      shell: update-ca-certificates

    - name: Add IP/dns of registry
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ registry_dns_name }}$'
        line: "{{ hostvars[groups['registry'][0]]['ansible_' + registry_network_interface]['ipv4']['address'] }} {{ registry_dns_name }}"
        state: present
      tags:
        - hostname

- hosts: k8s-cluster
  serial: 1
  tasks:
    - name: restart docker to update trust store
      shell: systemctl restart docker
    - pause:
        seconds: 30
