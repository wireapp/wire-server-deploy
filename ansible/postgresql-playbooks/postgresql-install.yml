---
- name: Install PostgreSQL packages
  hosts: postgresql
  gather_facts: yes
  vars:
    postgresql_use_repository: false

  tasks:
    - name: Install PostgreSQL dependencies
      become: yes
      ansible.builtin.apt:
        name:
          - libssl-dev
          - libllvm15
          - sysstat
          - ssl-cert
          - libjson-perl
          - libipc-run-perl
        state: present
        update_cache: yes

    - name: Install PostgreSQL packages from repository
      become: yes
      ansible.builtin.apt:
        name:
          - postgresql-{{ postgresql_version }}
          - postgresql-client-{{ postgresql_version }}
          - python3-psycopg2
        state: present
        update_cache: yes
      when: postgresql_use_repository

    - name: Check installed versions of PostgreSQL packages
      ansible.builtin.command: dpkg -s {{ item.name }}
      loop: "{{ postgresql_pkgs }}"
      register: pkg_check
      ignore_errors: yes
      changed_when: false
      when: not postgresql_use_repository

    - name: Download PostgreSQL packages
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "/tmp/{{ item.url | basename }}"
        checksum: "{{ item.checksum }}"
        validate_certs: no
      loop: "{{ postgresql_pkgs }}"
      when: 
        - not postgresql_use_repository
        - pkg_check.results[item_loop_index].rc != 0 
      loop_control:
        index_var: item_loop_index

    - name: Install PostgreSQL packages from downloaded files
      become: yes
      ansible.builtin.apt:
        deb: "/tmp/{{ item.url | basename }}"
      loop: "{{ postgresql_pkgs }}"
      when: 
        - not postgresql_use_repository
        - pkg_check.results[item_loop_index].rc != 0 
      loop_control:
        index_var: item_loop_index

    - name: Clean up downloaded PostgreSQL packages
      ansible.builtin.file:
        path: "/tmp/{{ item.url | basename }}"
        state: absent
      loop: "{{ postgresql_pkgs }}"
      when:
        - not postgresql_use_repository
        - pkg_check.results[item_loop_index].rc != 0
      loop_control:
        index_var: item_loop_index
