- name: Install Helm charts
  hosts: deploy_node
  become: yes
  become_user: "{{ ansible_user }}"
  vars:
    # admin container definition for WSD (wire-server-deploy) 
    docker_cmd_base: >-
      docker run --network=host
      -v "/home/{{ ansible_user }}/.ssh":/root/.ssh
      -v "/home/{{ ansible_user }}/wire-server-deploy/":/wire-server-deploy
      -v "/home/{{ ansible_user }}/.kube/config":/root/.kube/config
      -v "/home/{{ ansible_user }}/.minikube":/home/ubuntu/.minikube
      -e KUBECONFIG=/root/.kube/config
      "{{ wsd_container.stdout }}"
  tasks:

  - name: Replace TARGET_SYSTEM example.com with target_domain in offline_deploy_k8s
    lineinfile:
      path: /home/{{ ansible_user }}/wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh
      regexp: '^TARGET_SYSTEM="example\.com"'
      line: 'TARGET_SYSTEM="{{ target_domain }}"'
      backrefs: yes

  - name: Replace CERT_MASTER_EMAIL example.com with target_domain in offline_deploy_k8s
    lineinfile:
      path: /home/{{ ansible_user }}/wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh
      regexp: '^CERT_MASTER_EMAIL="certmaster@example\.com"'
      line: 'CERT_MASTER_EMAIL="certmaster@{{ target_domain }}"'
      backrefs: yes

  - name: Add HOST_IP with wire_ip in offline_deploy_k8s
    lineinfile:
      path: /home/{{ ansible_user }}/wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh
      regexp: '^HOST_IP="WIRE_IP"'
      line: 'HOST_IP="{{ wire_ip }}"'
      backrefs: yes

  - name: Update SFT_NODE in the offline_deploy_k8s
    lineinfile:
      path: /home/{{ ansible_user }}/wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh
      regexp: '^SFT_NODE="K8S_SFT_NODE"'
      line: 'SFT_NODE="{{ k8s_sft_node }}"'
      backrefs: yes

  - name: Update NGINX_K8S_NODE in the offline_deploy_k8s
    lineinfile:
      path: /home/{{ ansible_user }}/wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh
      regexp: '^NGINX_K8S_NODE="NGINX_K8S_NODE"'
      line: 'NGINX_K8S_NODE="{{ k8s_ingress_controller_node }}"'
      backrefs: yes

  - name: Update COTURN_NODE in the offline_deploy_k8s
    lineinfile:
      path: /home/{{ ansible_user }}/wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh
      regexp: '^COTURN_NODE="K8S_COTURN_NODE"'
      line: 'COTURN_NODE="{{ k8s_coturn_node }}"'
      backrefs: yes

  - name: Load WSD Docker image
    shell: |
      docker load -i "/home/{{ ansible_user }}/wire-server-deploy/containers-adminhost/container-wire-server-deploy.tgz" | awk '{print $3}'
    register: wsd_container

  - name: Process charts for demo environment
    shell: |
      {{ docker_cmd_base }} bash -c "source /wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh && process_charts demo"
    args:
      executable: /bin/bash
    
  - name: Process values
    shell: |
      {{ docker_cmd_base }} bash -c "source /wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh && process_values"
    args:
      executable: /bin/bash
    
  - name: Deploy cert manager # disable if running in a private env
    shell: |
      {{ docker_cmd_base }} bash -c "source /wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh && deploy_cert_manager"
    args:
      executable: /bin/bash
    
  - name: Deploy chart
    shell: |
      {{ docker_cmd_base }} bash -c "source /wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh && deploy_charts {{ item }}"
    args:
      executable: /bin/bash
    loop: "{{ charts_to_deploy }}"

  - name: Deploy calling stack
    shell: |
      {{ docker_cmd_base }} bash -c "source /wire-server-deploy/bin/wiab-demo/offline_deploy_k8s.sh && deploy_calling_services"
    args:
      executable: /bin/bash
