- name: Package installation and configuration
  hosts: deploy_node
  become: yes
  tasks:
  - name: Install required packages
    block:
    - name: apt update
      apt: update_cache=yes force_apt_get=yes

    - name: apt upgrade
      apt: upgrade=dist force_apt_get=yes

    - name: Install dependencies
      apt:
        name:
          - yq
          - jq
        state: present
        update_cache: yes

    - name: Create /etc/apt/keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository to apt sources
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $VERSION_CODENAME) stable" > /etc/apt/sources.list.d/docker.list
      args:
        executable: /bin/bash

    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Check if Docker is already installed
      command: docker --version
      register: docker_check
      failed_when: false
      changed_when: false

    - name: Extract current Docker version
      set_fact:
        current_docker_version: "{{ docker_check.stdout | regex_search('Docker version ([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') | first }}"
      when: docker_check.rc == 0

    - name: Extract desired Docker version from package version
      set_fact:
        desired_docker_version: "{{ docker_ce_version | regex_search('([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') | first }}"

    - name: Install Docker packages (fresh install)
      apt:
        name:
        - docker-ce={{ docker_ce_version }}
        - docker-ce-cli={{ docker_ce_version }}
        - containerd.io={{ containerd_version }}
        state: present
        allow_downgrade: yes
      when: docker_check.rc != 0

    - name: Update Docker packages (version mismatch)
      apt:
        name:
        - docker-ce={{ docker_ce_version }}
        - docker-ce-cli={{ docker_ce_version }}
        - containerd.io={{ containerd_version }}
        state: present
        allow_downgrade: yes
        force: yes
      when: 
        - docker_check.rc == 0
        - current_docker_version != desired_docker_version

    - name: Add {{ ansible_user }} to the docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Reset SSH connection to apply docker group membership changes
      meta: reset_connection

    - name: Install Minikube
      get_url:
        url: "https://github.com/kubernetes/minikube/releases/download/{{ minikube_version }}/minikube-linux-amd64"
        dest: /usr/local/bin/minikube
        mode: '0755'

    - name: Install kubectl
      get_url:
        url: "https://dl.k8s.io/release/{{ kubernetes_version }}/bin/linux/amd64/kubectl"
        dest: /usr/local/bin/kubectl
        mode: '0755'
