# repmgr configuration for {{ inventory_hostname }}

{% set node_config = repmgr_node_config[inventory_hostname] | default({}) %}
node_id={{ node_config.node_id | default(1) }}
node_name='{{ inventory_hostname }}'
{% if node_config.priority is defined %}
priority={{ node_config.priority }}
{% endif %}

# Connection info (following existing PR pattern for node discovery)
conninfo='host={{ ansible_default_ipv4.address | default(ansible_host) }} user={{ repmgr_user }} dbname={{ repmgr_database }} password={{ repmgr_password }} connect_timeout=2'

# PostgreSQL paths
data_directory='{{ postgresql_data_dir }}'
config_directory='{{ postgresql_conf_dir }}'
pg_bindir='/usr/lib/postgresql/{{ postgresql_version }}/bin'
passfile='/var/lib/postgresql/.pgpass'

# repmgr settings
use_replication_slots=yes
monitoring_history=true

# automatic failover
failover=automatic
primary_visibility_consensus=true
failover_validation_command='/opt/repmgr/scripts/failover_validation.sh %n %v %t'
repmgrd_exit_on_inactive_node=true

promote_command='/usr/bin/repmgr standby promote -f /etc/repmgr/{{ postgresql_version }}-main/repmgr.conf --log-to-file'
follow_command='/usr/bin/repmgr standby follow -f /etc/repmgr/{{ postgresql_version }}-main/repmgr.conf --upstream-node-id=%n --log-to-file'


# Service management
service_reload_command='/usr/lib/postgresql/{{ postgresql_version }}/bin/pg_ctl -D {{ postgresql_data_dir }} reload'
service_restart_command='/usr/lib/postgresql/{{ postgresql_version }}/bin/pg_ctl -D {{ postgresql_data_dir }} restart -m fast'

# Event notification (fencing integration)
event_notification_command='/opt/repmgr/scripts/simple_fence.sh %n %e %s'

# Monitoring settings (from your test config)
monitor_interval_secs={{ repmgr_monitor_interval | default(2) }}
reconnect_attempts={{ repmgr_reconnect_attempts | default(6) }}
reconnect_interval={{ repmgr_reconnect_interval | default(10) }}
standby_disconnect_on_failover=true

# systemd service management
repmgrd_service_start_command='sudo systemctl start repmgrd@{{ postgresql_version }}-main'
repmgrd_service_stop_command='sudo systemctl stop repmgrd@{{ postgresql_version }}-main'

repmgrd_pid_file='/tmp/repmgrd-{{ postgresql_version }}-main.pid'